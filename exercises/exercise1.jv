//  This pipeline loads the airports data from the Rhein-Kreis Neuss Open Data Portal
pipeline AirportsPipeline {
    //  This Block is responsible to Fetch the data from the provided URL.
    block AirportsDataExtractor oftype HttpExtractor {
        url: "https://opendata.rhein-kreis-neuss.de/api/v2/catalog/datasets/rhein-kreis-neuss-flughafen-weltweit/exports/csv";
    }

    // This Block is responsible to Process the fetched data as a text file
    block AirportsTextFileInterpreter oftype TextFileInterpreter {}

    //  this Block will Parse the text file as CSV, using the specified delimiter ";".
    block AirportsCSVInterpreter oftype CSVInterpreter { 
        delimiter: ';';
        }
    // This Block Interprets the CSV data into a structured table format, recognizing headers and column types.
    block AirportsTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "column_1" oftype integer,
            "column_2" oftype text,
            "column_3" oftype text,
            "column_4" oftype text,
            "column_5" oftype text,
            "column_6" oftype text,
            "column_7" oftype decimal,
            "column_8" oftype decimal,
            "column_9" oftype integer,
            "column_10" oftype decimal,
            "column_11" oftype text,
            "column_12" oftype text,
            "geo_punkt" oftype text,
            ];
        }
    
    // Finally, This Block is used to load structured data into a SQLite database in the specified table (airports).
    block AirportsDatabaseLoader oftype SQLiteLoader { table: "airports"; file: "./airports.sqlite"; }


    //  Pipeline flow for execution
    AirportsDataExtractor
        -> AirportsTextFileInterpreter
        -> AirportsCSVInterpreter
        -> AirportsTableInterpreter
        -> AirportsDatabaseLoader;
}